Advantage of using Numpy could be, essentially, free speed up *if* you are
writing pure Python code anyway. The problem, though, is that it's a bit *too*
magic, and thereby difficult to debug. Numpy, on the other hand, is great *if*
you know maths, and are willing to read some documentation. Numba and Numpy are,
supposedly, fairly compatible (some esoteric functions notwithstanding), so
*porque no los dos?*

Timing (with `timeit`): `numba_color2gray` on `rain.jpg`: 400 px, 600 px, 3 channels ...
Timing (with `timeit`): `numpy_color2gray` on `rain.jpg`: 400 px, 600 px, 3 channels ...
Timing (with `timeit`): `python_color2gray` on `rain.jpg`: 400 px, 600 px, 3 channels ...
Average runtimes after 3 runs (each):
  `numba_color2gray`: 0.116345 s
  `numpy_color2gray`: 0.002164 s
  `python_color2gray`: 3.972073 s
Normalized to fastest implementation time:
  `numba_color2gray`: 53.763863
  `numpy_color2gray`: 1.0
  `python_color2gray`: 1835.523567
